{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\WebTech\\\\user-management-assignment\\\\src\\\\pages\\\\EditUserPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport UserForm from \"../components/users/UserForm\";\nimport useUsers from \"../hooks/useUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditUserPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    users,\n    updateOne,\n    loading,\n    error\n  } = useUsers();\n  const user = useMemo(() => users.find(u => String(u.id) === String(id)), [users, id]);\n  const handle = async payload => {\n    const res = await updateOne(id, payload);\n    if (res.ok) navigate(\"/\");\n    return res;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      initial: user,\n      onSubmit: handle,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUserPage, \"ERF68Z0l9RyJ90vaogue3qcrIBE=\", false, function () {\n  return [useParams, useNavigate, useUsers];\n});\n_c = EditUserPage;\nvar _c;\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"names":["React","useMemo","useParams","useNavigate","UserForm","useUsers","jsxDEV","_jsxDEV","EditUserPage","_s","id","navigate","users","updateOne","loading","error","user","find","u","String","handle","payload","res","ok","children","className","fileName","_jsxFileName","lineNumber","columnNumber","initial","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/WebTech/user-management-assignment/src/pages/EditUserPage.jsx"],"sourcesContent":["import React, { useMemo } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport UserForm from \"../components/users/UserForm\"\nimport useUsers from \"../hooks/useUsers\"\n\nexport default function EditUserPage(){\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const { users, updateOne, loading, error } = useUsers()\n  const user = useMemo(() => users.find(u => String(u.id) === String(id)), [users, id])\n  const handle = async payload => {\n    const res = await updateOne(id, payload)\n    if(res.ok) navigate(\"/\")\n    return res\n  }\n  return (\n    <div>\n      {error && <div className=\"toast error\">{error}</div>}\n      <UserForm initial={user} onSubmit={handle} loading={loading} />\n    </div>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,KAAK;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACvD,MAAMW,IAAI,GAAGf,OAAO,CAAC,MAAMW,KAAK,CAACK,IAAI,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAACR,EAAE,CAAC,KAAKS,MAAM,CAACT,EAAE,CAAC,CAAC,EAAE,CAACE,KAAK,EAAEF,EAAE,CAAC,CAAC;EACrF,MAAMU,MAAM,GAAG,MAAMC,OAAO,IAAI;IAC9B,MAAMC,GAAG,GAAG,MAAMT,SAAS,CAACH,EAAE,EAAEW,OAAO,CAAC;IACxC,IAAGC,GAAG,CAACC,EAAE,EAAEZ,QAAQ,CAAC,GAAG,CAAC;IACxB,OAAOW,GAAG;EACZ,CAAC;EACD,oBACEf,OAAA;IAAAiB,QAAA,GACGT,KAAK,iBAAIR,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAET;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpDtB,OAAA,CAACH,QAAQ;MAAC0B,OAAO,EAAEd,IAAK;MAACe,QAAQ,EAAEX,MAAO;MAACN,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACpB,EAAA,CAhBuBD,YAAY;EAAA,QACnBN,SAAS,EACPC,WAAW,EACiBE,QAAQ;AAAA;AAAA2B,EAAA,GAH/BxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}